BASH_INIT=0 # the two first commands are from this script, and generates grabage

c_red='\033[33;33m'
c_green='\033[33;32m'
c_sgr0='\033[37;0m'

c_red=''
c_green=''
c_sgr0=''

function parse_git_branch () {
  if git rev-parse --git-dir >/dev/null 2>&1
  then
    gitver=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
    if git diff --quiet 2>/dev/null >&2 
    then
      gitver=${c_green}$gitver${c_sgr0}
    else
       gitver=${c_red}$gitver'!!!!!'${c_sgr0}
    fi
  else
    return 0
  fi
  echo -en " ($gitver)"
}

# function timer_start {
#   if [ "${BASH_INIT}" -lt 2 ]; then
#     BASH_INIT=$[$BASH_INIT + 1]
#   elif [ "${BASH_COMMAND}" == "timer_stop" ]; then
#     echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"
#   else
#     echo -ne "\033]0;${USER}@${HOSTNAME}: ${BASH_COMMAND}\007"
#   fi
#   timer=${timer:-$SECONDS}
# }
# 
# function timer_stop {
#   timer_show=$(($SECONDS - $timer))
#   unset timer
# }

# export PS1='[\[\033[33;32m\]`hostname | cut -d . -f1`\[\033[37;0m\]] [${timer_show}s] (`id | cut -d "(" -f2 | cut -d ")" -f1`)$(parse_git_branch) ${PWD##${PWD%/*/*/*}/}: '

export PS1='[\[\033[33;32m\]`hostname | cut -d . -f1`\[\033[37;0m\]] (`id | cut -d "(" -f2 | cut -d ")" -f1`)$(parse_git_branch) ${PWD##${PWD%/*/*/*}/}: '

unset PROMPT_COMMAND

